Ch 31. Floating point arithmetic
================================

Floating point representation
-----------------------------

A binary floating point number can be written as such:

.. math::

   (-1)^\text{sign} \cdot \text{mantissa} \cdot 2^\text{exponent}

This looks complicated but it really just is scientific notation (that you're
probably familiar with) but in base 2. e.g. :math:`1.234 \times 10^5`

The exponent is represented in **two's complement** and can either be positive
or negative.

.. admonition:: Example 1

   Positive sign, positive exponent.

   ===========  ================  ==============
   sign         mantissa          exponent      
   ===========  ================  ==============
   :math:`0`    :math:`1011010`   :math:`0011`  
   ===========  ================  ==============

   - **sign:** positive
   - **mantissa:** :math:`0.1011010_2`
   - **exponent:** :math:`3_{10}`

   .. math::

      \begin{align}
      0.1011010_2 \cdot (2^{3})_{10}
      &= 101.101_2 \\
      &= 2^2 + 2^0 + 2^{-1} + 2^{-3} \\
      &= 5.625_{10}
      \end{align}

.. admonition:: Example 2

   Negative sign, positive exponent.

   ===========  ================  ==============
   sign         mantissa          exponent      
   ===========  ================  ==============
   :math:`1`    :math:`1011010`   :math:`0011`  
   ===========  ================  ==============

   - **sign:** negative
   - **mantissa:** :math:`0.1011010_2`
   - **exponent:** :math:`3_{10}`

   .. math::

      \begin{align}
      -0.1011010_2 \cdot (2^{3})_{10}
      &= -101.101_2 \\
      &= -2^2 + 2^0 + 2^{-1} + 2^{-3} \\
      &= -5.625_{10}
      \end{align}

.. admonition:: Example 3

   Positive sign, negative exponent.

   ===========  ================  ==============
   sign         mantissa          exponent      
   ===========  ================  ==============
   :math:`0`    :math:`1010000`   :math:`1110`
   ===========  ================  ==============

   - **sign:** positive
   - **mantissa:** :math:`0.1010000_2`
   - **exponent:** :math:`-2_{10}`

   .. math::

      \begin{align}
      0.1010000_2 \cdot (2^{-2})_{10}
      &= 0.00101_2 \\
      &= 2^{-3} + 2^{-5} \\
      &= 0.15625_{10}
      \end{align}

Normalization
-------------

Our goal is to move the floating point to the first position where there is a
change from 1 to 0 or vice versa. Then change the exponent to compensate for
the scaling.

.. admonition:: Example 1

   Normalize::

      0.0001011 0101

   - **sign:** positive
   - **mantissa:** :math:`0.0001011_2`
   - **exponent:** :math:`5_{10}`

   **Step 1.** Move floating point to the first separation of 0's and 1's::

      0.0 0 0 1 0 1 1
      0 0 0 0.1 0 1 1

   The new mantissa is ``0.1011000``. (Only keep one digit to the left of
   floating point and pad the right side with 0's)

   **Step 2.** Find the new exponent:

   .. math::

      \begin{align}
      0.1011_2 \cdot 2^{-3} &= 0.0001011_2 \\
      0.1011_2 \cdot 2^{2} &= 0.0001011_2 \cdot 2^{5}
      \end{align}

   The new exponent is ``2``.

   **Step 3.** Combine everything::

      0.1011000 0010

.. admonition:: Example 2

   Normalize::

      1.1110111 0001

   - **sign:** negative
   - **mantissa:** :math:`0.1110111_2`
   - **exponent:** :math:`1_{10}`

   **Step 1.** Move floating point to the first separation of 0's and 1's::

      1.1 1 1 0 1 1 1
      1 1 1 1.0 1 1 1

   The new mantissa is ``1.0111000``. (Only keep one digit to the left of
   floating point and pad the right side with 0's)

   **Step 2.** Find the new exponent:

   .. math::

      \begin{align}
      1.0111_2 \cdot 2^{-3} &= 1.1110111_2 \text{this is valid in two's complement}\\
      1.0111_2 \cdot 2^{-2} &= 1.1110111_2 \cdot 2^{1}
      \end{align}

   The new exponent is ``-2``.

   **Step 3.** Combine everything::

      1.0111000 1110
